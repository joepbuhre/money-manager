package main

import (
	"context"
	"log"
	"money-manager/database"
	_ "money-manager/docs"
	routers "money-manager/routes"

	"money-manager/middlewares"
	"money-manager/utils"

	// gin-swagger middleware

	"github.com/spf13/viper"
	ginSwagger "github.com/swaggo/gin-swagger"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
)

// docs is generated by Swag CLI, you have to import it.

// swagger embed files

//	@title			Swagger Example API
//	@version		1.0
//	@description	This is a sample server celler server.
//	@termsOfService	http://swagger.io/terms/

//	@contact.name	API Support
//	@contact.url	http://www.swagger.io/support
//	@contact.email	support@swagger.io

//	@license.name	Apache 2.0
//	@license.url	http://www.apache.org/licenses/LICENSE-2.0.html

//	@host		localhost:8080
//	@BasePath	/api

//	@securityDefinitions.apikey	ApiKeyAuth
//	@in							header
//	@name						Authorization

// @externalDocs.description	OpenAPI
// @externalDocs.url			https://swagger.io/resources/open-api/
func main() {
	viper.SetConfigFile(".env")

	utils.InitDB()

	// Start migration
	utils.Migrate()

	var db = utils.GetDB()

	env := &utils.Env{
		DB:      db,
		Queries: database.New(db),
	}

	// Add master api key if not exist yet
	var err = env.Queries.AddToken(context.Background(), database.AddTokenParams{
		UserID: 1,
		Token:  viper.Get("MASTER_API_KEY").(string),
	})
	if err != nil {
		log.Println(err)
		return
	}

	router := gin.Default()

	// Public routes
	public := router.Group(utils.GetConfig("BASE_PATH"))
	public.Use(middlewares.GetAuthMiddleware(env))
	routers.AddMainRouter(public)
	routers.AddUserRouter(public, env)
	routers.AddAccountRouter(public, envw)

	// user.AddUserRouter(public, env.db)

	// Private routes
	// private := router.Group("/api")
	// private.Use(middlewares.GetAuthMiddleware(env.db))

	router.GET("/docs/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	router.Run("localhost:8080")

}
